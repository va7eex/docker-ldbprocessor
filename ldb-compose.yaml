version: "3"
services:

  #databases
  ## MariaDB
  ldb_database:
    image: linuxserver/mariadb:latest
    container_name: ldb_database_api
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    restart: always
    networks:
      - ldbbackend
    volumes:
      - /mnt/ldbdatabase_api:/config
  ## Redis
  ldb_redis:
    image: redis:alpine
    container_name: ldb_redis_api
    restart: always
    networks:
      - ldbbackend

  # API
  ldb_api:
    container_name: ldb_api
    build:
      context: api/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    user: "1002:1002"
    environment:
      - FLASK_APP=api.py
      - MYSQL_IP=ldb_database_api
      - MYSQL_DB=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    restart: always
    ports:
      - 5500:5000
    networks:
      - ldbbackend
    depends_on:
      - ldb_redis
      - ldb_database

  #apps, will build to order
  ## Barcode processor
  # ldb_processor_bc:
  #   container_name: ldb_processor_bc
  #   build:
  #     context: barcodeprocessor/
  #     dockerfile: Dockerfile
  #     args:
  #       - TZ=${TZ}
  #   user: "1002:1002"
  #   environment:
  #     - APIURL="ldb_api:5000"
  #     - APIKEY=${APIKEY}
  #   volumes:
  #     - /home/bibwsstaff/ldbinvoice2:/var/ldbinvoice
  #   restart: always
  #   depends_on:
  #     - ldb_api
  #   networks:
  #     - ldbbackend
  # ## Order Submission Processor
  ldb_processor_os:
    container_name: ldb_processor_os_api
    build:
      context: ordersubmission/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    user: "1002:1002"
    environment:
      - APIURL="ldb_api:5000"
      - APIKEY=${APIKEY}
    volumes:
      - /home/bibwsstaff/ldbinvoice2:/var/ldbinvoice
    restart: always
    depends_on:
      - ldb_api
    networks:
      - ldbbackend
  ## ARInvoice Processor
  ldb_processor_ar:
    container_name: ldb_processor_ar_api
    build:
      context: arinvoice/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    user: "1002:1002"
    environment:
      - APIURL="ldb_api:5000"
      - APIKEY=${APIKEY}
      - PRICECHANGEIGNORE=${PRICECHANGEIGNORE}
    volumes:
      - /home/bibwsstaff/ldbinvoice2:/var/ldbinvoice
    restart: always
    depends_on:
      - ldb_api
    networks:
      - ldbbackend
  ## IMAP downloader
  ldb_emailwatcher_dev:
    container_name: ldb_emailwatcher_api
    build:
      context: emailwatcher/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    user: "1002:1002"
    environment:
      - IMAP_ADDR=${IMAP_ADDR}
      - IMAP_USER=${IMAP_USER}
      - IMAP_PASS=${IMAP_PASS}
      - IMAP_PORT=${IMAP_PORT}
      - SYNCTIME=1
    volumes:
      - /home/bibwsstaff/ldbinvoice2:/var/ldbinvoice
    restart: always
    depends_on:
      - ldb_processor_ar
      - ldb_processor_os

networks:
  ldbbackend:
